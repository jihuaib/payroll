<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.muping.payroll.mapper.SystemMenuMapper" >
  <resultMap id="BaseResultMap" type="com.muping.payroll.domain.SystemMenu" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <association property="parent" column="parent_id" javaType="com.muping.payroll.domain.SystemMenu" select="selectByPrimaryKey"/>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `system_menu`
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.muping.payroll.domain.SystemMenu" useGeneratedKeys="true" keyProperty="id" >
    insert into `system_menu` (name, sn, url, 
      parent_id)
    values (#{name,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{parent.id})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.muping.payroll.domain.SystemMenu" >
    update `system_menu`
    set name = #{name,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parent.id}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <sql id="base_column">
        id, name, sn, url, parent_id
    </sql>

    <sql id="where_sql">
        <where>
            <if test="parentId==-1L">
                and parent_id is null
            </if>
            <if test="parentId!=-1L">
                and parent_id=#{parentId}
            </if>
        </where>
    </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select <include refid="base_column"/>
    from `system_menu`
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="queryAllWithoutRoot" resultMap="BaseResultMap" >
    select <include refid="base_column"/>
    from `system_menu` where parent_id is not null
  </select>

    <select id="queryCount" resultType="java.lang.Long">
        select count(id) from system_menu <include refid="where_sql"/>
    </select>

    <select id="queryList" resultMap="BaseResultMap">
        select <include refid="base_column"/>
        from system_menu <include refid="where_sql"/> limit #{startIndex},#{pageSize}
    </select>

    <select id="queryParentNameByParentId" resultMap="BaseResultMap">
        select <include refid="base_column"/>
        from system_menu where id=#{parentId}
    </select>

    <select id="queryChildCount" resultType="java.lang.Long">
        select count(id) from system_menu where parent_id=#{id}
    </select>

    <select id="queryByRoleId" resultMap="BaseResultMap">
        select <include refid="base_column"/> from system_menu where id
        in (select menu_id from role_menu where role_id=#{id})
    </select>

    <select id="queryAllRootMenus" resultMap="BaseResultMap">
        select <include refid="base_column"/>
        from system_menu where parent_id is null
    </select>

    <select id="queryAllMenusWithPermission" resultMap="BaseResultMap">
        SELECT
        <include refid="base_column"/>
        FROM
        system_menu sm
        LEFT JOIN role_menu rm ON sm.id = rm.menu_id
        WHERE
        rm.role_id IN (
        SELECT
        er.role_id
        FROM
        employee_role er
        WHERE
        er.employee_id = #{id}
        )
    </select>

</mapper>